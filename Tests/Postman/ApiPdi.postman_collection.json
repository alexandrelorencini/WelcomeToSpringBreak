{
	"info": {
		"_postman_id": "d0409650-42f8-4e96-a90f-588ebdec81c9",
		"name": "ApiPdi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Installing postmanBDD Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "becaaeb8-9d8c-4417-aa28-854b00832a2a",
						"type": "text/javascript",
						"exec": [
							"pm.globals.clear();"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b7c41d76-a1dd-4a7c-aa60-82bf8c8999f0",
						"type": "text/javascript",
						"exec": [
							"// \"install\" Postman BDD",
							"postman.setGlobalVariable('postmanBDD', responseBody);",
							"const moment = require('moment');",
							"eval(globals.postmanBDD);",
							"",
							"describe('Install PostmanBDD Successfully', () => {",
							"    it('Install PostmanBDD Successfully', () => {",
							"        response.should.have.status(200);",
							"    });",
							"});",
							"",
							"const today = moment().format('YYYY-MM-DD');",
							"const yesterday = moment().subtract(1, 'days').format('YYYY-MM-DD');",
							"const tomorrow = moment().add(1, 'days').format('YYYY-MM-DD');",
							"",
							"postman.setGlobalVariable('loadHelpers', function loadHelpers() {",
							"    let helpers = {};",
							"",
							"    helpers.randomString = function(length) {",
							"        let text = '';",
							"        let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";",
							"        for (let i = 0; i < length; i++) {",
							"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
							"        }",
							"        return text;",
							"    };",
							"",
							"    helpers.randomLowerCaseChars = function(length) {",
							"        let text = '';",
							"        let possible = \"abcdefghijklmnopqrstuvwxyz\";",
							"        for (let i = 0; i < length; i++) {",
							"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
							"        }",
							"        return text;",
							"    };",
							"",
							"    helpers.randomSpecialChar = function(length) {",
							"        let text = '';",
							"        let possible = \"(!#$%&'()*+,¨-./:;<=>?@[\\]^_`´{| ~)\";",
							"        for (let i = 0; i < length; i++) {",
							"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
							"        }",
							"        return text;",
							"    };",
							"",
							"    helpers.randomUnicodeSymbols = function(length) {",
							"        let result = '';",
							"        for (let i = 0; i < length; i++) {",
							"            result += String.fromCharCode(0x30A0 + Math.random() * (0x30FF - 0x30A0 + 1));",
							"        }",
							"        return result;",
							"    };",
							"",
							"    helpers.exceptionObj = ['field', 'value', 'message', 'text', 'params'];",
							"",
							"    helpers.genRandomUuids = function(quantity) {",
							"        function guid() {",
							"            function s4() {",
							"                return Math.floor((1 + Math.random()) * 0x10000)",
							"                    .toString(16)",
							"                    .substring(1);",
							"            }",
							"            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();",
							"        }",
							"        let randomUuids = [];",
							"        for (let i = 1; i <= quantity; i++) {",
							"            randomUuids.push({",
							"                id: guid()",
							"            });",
							"        }",
							"",
							"        return randomUuids;",
							"    };",
							"    ",
							"    helpers.getAttributeProps = function(attribute) {",
							"    const {attributeType} = attribute;",
							"",
							"    switch (attributeType) {",
							"        case 'TextAttribute':",
							"            {",
							"                return ({",
							"                    id: attribute.id,",
							"                    attributeName: attribute.name,",
							"                    attributeType: attribute.attributeType,",
							"                    textMaxLength: attribute.textMaxLength",
							"                })",
							"                break;",
							"            }",
							"        case 'NumberAttribute':",
							"            {",
							"                return ({",
							"                    id: attribute.id,",
							"                    attributeName: attribute.name,",
							"                    attributeType: attribute.attributeType,",
							"                    numberScale: attribute.numberScale,",
							"                    numberPrecision: attribute.numberPrecision,",
							"                    numberAllowNegative: attribute.numberAllowNegative",
							"                })",
							"                break;",
							"            }",
							"        default:",
							"            {",
							"                return ({",
							"                    id: attribute.id,",
							"                    attributeName: attribute.name,",
							"                    attributeType: attribute.attributeType",
							"                });",
							"                ",
							"            }",
							"        break;",
							"    }",
							"}",
							"",
							"    return helpers;",
							"} + '; loadHelpers();');",
							"",
							"",
							"let valor = 0",
							"",
							"function geraId(valor) {",
							"    let {",
							"        id: randomUuid",
							"    } = helpers.genRandomUuids(1)[0];",
							"    postman.getEnvironmentVariable('randomUuid', randomUuid);",
							"    valor = randomUuid;",
							"    return valor;",
							"}",
							"",
							"let {",
							"    randomString",
							"} = eval(globals.loadHelpers)",
							"",
							"const textGreaterThan80 = randomString(81);",
							"",
							"const textGreaterThan255 = randomString(256);",
							"",
							"const textGreaterThan4000 = randomString(4001);",
							"",
							"const responseSchema = {",
							"    type: 'object',",
							"    required: ['items', 'count', 'page', 'pageSize'],",
							"    properties: {",
							"        items: {",
							"            type: \"array\"",
							"        },",
							"        count: {",
							"            type: \"number\"",
							"        },",
							"        page: {",
							"            type: \"number\"",
							"        },",
							"        pageSize: {",
							"            type: \"number\"",
							"        },",
							"        additionalProperties: false",
							"    },",
							"    additionalProperties: false",
							"};",
							"",
							"const getAllMetaObjectSchema = {",
							"    type: 'object',",
							"    properties: {",
							"        items: {",
							"            type: 'array',",
							"            required: ['id', 'name', 'offlineAvailable'],",
							"            items: {",
							"                type: 'object',",
							"                properties: {",
							"                    id: {",
							"                        type: 'string'",
							"                    },",
							"                    name: {",
							"                        type: 'string'",
							"                    },",
							"                    serviceName: {",
							"                        type: 'string'",
							"                    },",
							"                    description: {",
							"                        type: 'string'",
							"                    },",
							"                    offlineAvailable: {",
							"                        type: 'boolean'",
							"                    },",
							"                    standard: {",
							"                        type: 'boolean'",
							"                    },",
							"                    customized: {",
							"                        type: 'boolean'",
							"                    },",
							"                    standardVersion: {",
							"                        type: 'string'",
							"                    },",
							"                    controlVersion: {",
							"                        type: 'string'",
							"                    },",
							"                    revisionVersion: {",
							"                        type: 'string'",
							"                    },",
							"                    createdByUserId: {",
							"                        type: 'string'",
							"                    },",
							"                    createdByUsername: {",
							"                        type: 'string'",
							"                    },",
							"                    createdAt: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedByUserId: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedByUsername: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedAt: {",
							"                        type: 'string'",
							"                    },",
							"                    additionalProperties: false",
							"                },",
							"                additionalProperties: false",
							"            },",
							"            additionalProperties: false",
							"        }",
							"    }",
							"};",
							"",
							"",
							"",
							"const getTextMetaAttributeSchema = {",
							"    type: 'object',",
							"    required: ['id', 'name', 'attributeType', 'required', 'standard', 'createdByUserId', 'createdByUsername', 'createdAt', 'updatedByUserId', 'updatedByUserId', 'updatedByUsername', 'updatedAt'],",
							"    properties: {",
							"        id: {",
							"            type: 'string'",
							"        },",
							"        name: {",
							"            type: 'string'",
							"        },",
							"        description: {",
							"            type: 'string'",
							"        },",
							"        attributeType: {",
							"            type: 'string'",
							"        },",
							"        required: {",
							"            type: 'boolean'",
							"        },",
							"        standard: {",
							"            type: 'boolean'",
							"        },",
							"        customized: {",
							"            type: 'boolean'",
							"        },",
							"        createdByUserId: {",
							"            type: 'string'",
							"        },",
							"        createdByUsername: {",
							"            type: 'string'",
							"        },",
							"        createdAt: {",
							"            type: 'string'",
							"        },",
							"        updatedByUserId: {",
							"            type: 'string'",
							"        },",
							"        updatedByUsername: {",
							"            type: 'string'",
							"        },",
							"        updatedAt: {",
							"            type: 'string'",
							"        }",
							"    },",
							"    additionalProperties: false",
							"};",
							"",
							"const getNumberMetaAttributeSchema = {",
							"    type: 'object',",
							"    required: ['id', 'name', 'attributeType', 'required', 'standard', 'createdByUserId', 'createdByUsername', 'createdAt', 'updatedByUserId', 'updatedByUsername', 'updatedAt', 'numberScale', 'numberPrecision', 'numberAllowNegative'],",
							"    properties: {",
							"        id: {",
							"            type: 'string'",
							"        },",
							"        name: {",
							"            type: 'string'",
							"        },",
							"        description: {",
							"            type: 'string'",
							"        },",
							"        attributeType: {",
							"            type: 'string'",
							"        },",
							"        required: {",
							"            type: 'boolean'",
							"        },",
							"        standard: {",
							"            type: 'boolean'",
							"        },",
							"        customized: {",
							"            type: 'boolean'",
							"        },",
							"        createdByUserId: {",
							"            type: 'string'",
							"        },",
							"        createdByUsername: {",
							"            type: 'string'",
							"        },",
							"        createdAt: {",
							"            type: 'string'",
							"        },",
							"        updatedByUserId: {",
							"            type: 'string'",
							"        },",
							"        updatedByUsername: {",
							"            type: 'string'",
							"        },",
							"        updatedAt: {",
							"            type: 'string'",
							"        },",
							"        numberScale: {",
							"            type: 'number'",
							"        },",
							"        numberPrecision: {",
							"            type: 'number'",
							"        },",
							"        numberAllowNegative: {",
							"            type: 'boolean'",
							"        }",
							"    },",
							"    additionalProperties: false",
							"};",
							"",
							"",
							"const getDateMetaAttributeSchema = {",
							"    type: 'object',",
							"    required: ['id', 'name', 'attributeType', 'required', 'standard', 'createdByUserId', 'createdByUsername', 'createdAt', 'updatedByUserId', 'updatedByUsername', 'updatedAt'],",
							"    properties: {",
							"        id: {",
							"            type: 'string'",
							"        },",
							"        name: {",
							"            type: 'string'",
							"        },",
							"        description: {",
							"            type: 'string'",
							"        },",
							"        attributeType: {",
							"            type: 'string'",
							"        },",
							"        required: {",
							"            type: 'boolean'",
							"        },",
							"        standard: {",
							"            type: 'boolean'",
							"        },",
							"        customized: {",
							"            type: 'boolean'",
							"        },",
							"        createdByUserId: {",
							"            type: 'string'",
							"        },",
							"        createdByUsername: {",
							"            type: 'string'",
							"        },",
							"        createdAt: {",
							"            type: 'string'",
							"        },",
							"        updatedByUserId: {",
							"            type: 'string'",
							"        },",
							"        updatedByUsername: {",
							"            type: 'string'",
							"        },",
							"        updatedAt: {",
							"            type: 'string'",
							"        }",
							"    },",
							"    additionalProperties: false",
							"};",
							"",
							"const getAllMetaAttributeSchema = {",
							"    type: 'object',",
							"    properties: {",
							"        items: {",
							"            type: 'array',",
							"            required: ['id', 'name', 'attributeType', 'required'],",
							"            items: {",
							"                type: 'object',",
							"                properties: {",
							"                    id: {",
							"                        type: 'string'",
							"                    },",
							"                    name: {",
							"                        type: 'string'",
							"                    },",
							"                    description: {",
							"                        type: 'string'",
							"                    },",
							"                    attributeType: {",
							"                        type: 'string'",
							"                    },",
							"                    required: {",
							"                        type: 'boolean'",
							"                    },",
							"                    standard: {",
							"                        type: 'boolean'",
							"                    },",
							"                    customized: {",
							"                        type: 'boolean'",
							"                    },",
							"                    createdByUserId: {",
							"                        type: 'string'",
							"                    },",
							"                    createdByUsername: {",
							"                        type: 'string'",
							"                    },",
							"                    createdAt: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedByUserId: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedByUsername: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedAt: {",
							"                        type: 'string'",
							"                    },",
							"                    numberScale: {",
							"                        type: 'number'",
							"                    },",
							"                    numberPrecision: {",
							"                        type: 'number'",
							"                    },",
							"                    numberAllowNegative: {",
							"                        type: 'boolean'",
							"                    },",
							"                    textMaxLength: {",
							"                        type: 'number'",
							"                    }",
							"                },",
							"                additionalProperties: false",
							"            },",
							"            additionalProperties: false",
							"        }",
							"    }",
							"};",
							"",
							"",
							"const getAllMetaScreenSchema = {",
							"    type: 'object',",
							"    properties: {",
							"        items: {",
							"            type: 'array',",
							"            required: ['name'],",
							"            items: {",
							"                type: 'object',",
							"                properties: {",
							"                    id: {",
							"                        type: 'string'",
							"                    },",
							"                    metaObjectId: {",
							"                        type: 'string'",
							"                    },",
							"                    name: {",
							"                        type: 'string'",
							"                    },",
							"                    serviceName: {",
							"                        type: 'string'",
							"                    },",
							"                    description: {",
							"                        type: 'string'",
							"                    },",
							"                    title: {",
							"                        type: 'string'",
							"                    },",
							"                    status: {",
							"                        type: 'string'",
							"                    },",
							"                    environment: {",
							"                        type: 'string'",
							"                    },",
							"                    routeUrl: {",
							"                        type: 'string'",
							"                    },",
							"                    standard: {",
							"                        type: 'boolean'",
							"                    },",
							"                    customized: {",
							"                        type: 'boolean'",
							"                    },",
							"                    controlVersion: {",
							"                        type: 'string'",
							"                    },",
							"                    revisionVersion: {",
							"                        type: 'string'",
							"                    },",
							"                    createdByUserId: {",
							"                        type: 'string'",
							"                    },",
							"                    createdByUsername: {",
							"                        type: 'string'",
							"                    },",
							"                    createdAt: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedByUserId: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedByUsername: {",
							"                        type: 'string'",
							"                    },",
							"                    updatedAt: {",
							"                        type: 'string'",
							"                    },",
							"                    additionalProperties: false",
							"                },",
							"                additionalProperties: false",
							"            },",
							"            additionalProperties: false",
							"        }",
							"    }",
							"};",
							"",
							"const getaMetaScreenSchema = {",
							"    type: 'object',",
							"    required: ['id', 'name'],",
							"    properties: {",
							"        id: {",
							"            type: 'string'",
							"        },",
							"        metaObjectId: {",
							"            type: 'string'",
							"        },",
							"        name: {",
							"            type: 'string'",
							"        },",
							"        serviceName: {",
							"            type: 'string'",
							"        },",
							"        description: {",
							"            type: 'string'",
							"        },",
							"        title: {",
							"            type: 'string'",
							"        },",
							"        status: {",
							"            type: 'string'",
							"        },",
							"        environment: {",
							"            type: 'string'",
							"        },",
							"        routeUrl: {",
							"            type: 'string'",
							"        },",
							"        standard: {",
							"            type: 'boolean'",
							"        },",
							"        customized: {",
							"            type: 'boolean'",
							"        },",
							"        controlVersion: {",
							"            type: 'string'",
							"        },",
							"        revisionVersion: {",
							"            type: 'string'",
							"        },",
							"        createdByUserId: {",
							"            type: 'string'",
							"        },",
							"        createdByUsername: {",
							"            type: 'string'",
							"        },",
							"        createdAt: {",
							"            type: 'string'",
							"        },",
							"        updatedByUserId: {",
							"            type: 'string'",
							"        },",
							"        updatedByUsername: {",
							"            type: 'string'",
							"        },",
							"        updatedAt: {",
							"            type: 'string'",
							"        },",
							"        additionalProperties: false",
							"    },",
							"    additionalProperties: false",
							"}",
							"",
							"",
							"const getElementSchema = {",
							"    type: 'object',",
							"    required: ['id', 'name', 'metaAttributeId', 'elementType', 'description', 'required', 'standard', 'elementOrder', 'label'],",
							"    properties: {",
							"        id: {",
							"            type: 'string'",
							"        },",
							"        metaAttributeId: {",
							"            type: 'string'",
							"        },",
							"        name: {",
							"            type: 'string'",
							"        },",
							"        elementType: {",
							"            type: 'string'",
							"        },",
							"        description: {",
							"            type: 'string'",
							"        },",
							"        required: {",
							"            type: 'boolean'",
							"        },",
							"        standard: {",
							"            type: 'boolean'",
							"        },",
							"        elementOrder: {",
							"            type: 'number'",
							"        },",
							"        label: {",
							"            type: 'string'",
							"        },",
							"        customized: {",
							"            type: 'boolean'",
							"        },",
							"        createdByUserId: {",
							"            type: 'string'",
							"        },",
							"        createdByUsername: {",
							"            type: 'string'",
							"        },",
							"        createdAt: {",
							"            type: 'string'",
							"        },",
							"        updatedByUserId: {",
							"            type: 'string'",
							"        },",
							"        updatedByUsername: {",
							"            type: 'string'",
							"        },",
							"        updatedAt: {",
							"            type: 'string'",
							"        },",
							"        additionalProperties: false",
							"    },",
							"    additionalProperties: false",
							"}",
							"",
							"",
							"const META_OBJECT_NONEXISTENT = '8b49ffa9-f5cc-4b54-a665-7a1d902cf725';",
							"const META_ATTRIBUTE_NONEXISTENT = 'f9d8f065-633b-458d-ba9f-29d227b3292c';",
							"",
							"postman.setGlobalVariable('META_OBJECT_NONEXISTENT', META_OBJECT_NONEXISTENT);",
							"postman.setGlobalVariable('META_ATTRIBUTE_NONEXISTENT', META_ATTRIBUTE_NONEXISTENT);",
							"postman.setGlobalVariable('textGreaterThan80', textGreaterThan80);",
							"postman.setGlobalVariable('textGreaterThan255', textGreaterThan255);",
							"postman.setGlobalVariable('textGreaterThan4000', textGreaterThan4000);",
							"postman.setGlobalVariable('pagedListSchema', JSON.stringify(responseSchema));",
							"postman.setGlobalVariable('yesterday', yesterday);",
							"postman.setGlobalVariable('today', today);",
							"postman.setGlobalVariable('tomorrow', tomorrow);",
							"postman.setGlobalVariable('responseSchema', JSON.stringify(responseSchema));",
							"postman.setGlobalVariable('getAllMetaObjectSchema', JSON.stringify(getAllMetaObjectSchema));",
							"postman.setGlobalVariable('getAllMetaAttributeSchema', JSON.stringify(getAllMetaAttributeSchema));",
							"postman.setGlobalVariable('getTextMetaAttributeSchema', JSON.stringify(getTextMetaAttributeSchema));",
							"postman.setGlobalVariable('getDateMetaAttributeSchema', JSON.stringify(getDateMetaAttributeSchema));",
							"postman.setGlobalVariable('getNumberMetaAttributeSchema', JSON.stringify(getNumberMetaAttributeSchema));",
							"postman.setGlobalVariable('getAllMetaScreenSchema', JSON.stringify(getAllMetaScreenSchema));",
							"postman.setGlobalVariable('getaMetaScreenSchema', JSON.stringify(getaMetaScreenSchema));",
							"postman.setGlobalVariable('getElementSchema', JSON.stringify(getElementSchema));"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://bigstickcarpet.com/postman-bdd/dist/postman-bdd.min.js",
					"protocol": "http",
					"host": [
						"bigstickcarpet",
						"com"
					],
					"path": [
						"postman-bdd",
						"dist",
						"postman-bdd.min.js"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a person",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "16b2b86c-fe1b-43a6-b8fe-2b519a52af36",
						"type": "text/javascript",
						"exec": [
							"eval(globals.postmanBDD);",
							"const PERSON_ID = response.body.id",
							"postman.setGlobalVariable('PERSON_ID', PERSON_ID);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"alexandre\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/person",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"person"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Persons",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8baeb1c-eb65-4973-ba05-10f4c50b9348",
						"type": "text/javascript",
						"exec": [
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8000/api/person",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"person"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Person for ID",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8000/api/person/{{PERSON_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"person",
						"{{PERSON_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a person",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8000/api/person/{{PERSON_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"person",
						"{{PERSON_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a person",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8000/api/person/{{PERSON_ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"person",
						"{{PERSON_ID}}"
					]
				}
			},
			"response": []
		}
	]
}